use std::cmp::Ordering;

use self::Script::*;

#[derive(Copy, Clone, Debug, PartialEq)]
pub enum Script {
    Ahom, AnatolianHieroglyphs, Arabic, Armenian, Avestan, Balinese, Bamum,
    BassaVah, Batak, Bengali, Bopomofo, Brahmi, Braille, Buginese, Buhid,
    Carian, CaucasianAlbanian, Chakma, Cherokee, CJK, Coptic, CroatianSerbian,
    Cuneiform, Cypriot, Cyrillic, Deseret, Devanagari, Duployan,
    EarlyDynasticCuneiform, EgyptianHieroglyphs, Elbasan, Ethiopic, Georgian,
    Glagolitic, Gothic, Grantha, Greek, Gujarati, Gurmukhi, HalfwidthHangul,
    HalfwidthKatakana, HalfwidthLatin, Hangul, Hanunoo, Hatran, Hebrew,
    Hiragana, ImperialAramaic, InscriptionalPahlavi, InscriptionalParthian,
    IPA, Javanese, Kaithi, Kana, Kanbun, Kannada, Katakana, KayahLi,
    Kharoshthi, Khmer, Khojki, Khudawadi, Lao, Latin, Lepcha, Limbu, LinearA,
    LinearB, Lisu, Livonian, Lycian, Lydian, Mahajani, Malayalam, Mandaic,
    Manichaean, MeeteiMayek, MendeKikakui, MeroiticHieroglyphs, Miao, Modi,
    Mongolian, Mro, Multani, Myanmar, Nabataean, NewTaiLue, NKo, Ogham,
    OlChiki, OldHungarian, OldItalic, OldPermic, OldPersian, OldSouthArabian,
    OldTurkic, Omyanya, OrdNorthArabian, Oriya, PahawhHmong, Palmyrene,
    PauCinHau, PhagsPa, Phoenician, Phonetic, Pinyin, PsalterPahlavi, Rejang,
    Romanian, Runic, Samaritan, Saurashtra, Sharada, Shavian, Siddham,
    Sinhala, Sinology, SoraSompeng, Sundanese, SuttonSignWriting, SylotiNagri,
    Syriac, Tagalog, Tagbanwa, TaiViet, TaiLe, Takri, Tamil, Telugu, Thaana,
    Thai, Tibetan, Tifinagh, Tirhuta, Ugaritic,
    UnifiedCanadianAboriginalSyllabics, Vai, Vedic, WarangCiti, Yi,
}

fn pos<N: PartialOrd>(start: N, end: N, num: N) -> Ordering {
    if num >= start && num <= end {
        Ordering::Equal
    }
    else if num > start {
        Ordering::Less
    }
    else if num < end {
        Ordering::Greater
    }
    else {
        unreachable!()
    }
}

impl Script {
    pub fn lookup(c: char) -> Option<Script> {
        let num = c as u32;
        let index = SCRIPT_TABLE.binary_search_by(|range| pos(range.0, range.1, num));

        match index {
            Ok(index)  => Some(SCRIPT_TABLE[index].2),
            Err(_)     => None,
        }
    }

    pub fn name(&self) -> &'static str {
        match *self {
            Ahom => "Ahom",
            AnatolianHieroglyphs => "Anatolian Hieroglyphs",
            Arabic => "Arabic",
            Armenian => "Armenian",
            Avestan => "Avestan",
            Balinese => "Balinese",
            Bamum => "Bamum",
            BassaVah => "Bassa Vah",
            Batak => "Batak",
            Bengali => "Bengali",
            Bopomofo => "Bopomofo",
            Brahmi => "Brahmi",
            Braille => "Braille",
            Buginese => "Buginese",
            Buhid => "Buhid",
            Carian => "Carian",
            CaucasianAlbanian => "Caucasian Albanian",
            Chakma => "Chakma",
            Cherokee => "Cherokee",
            CJK => "CJK",
            Coptic => "Coptic",
            CroatianSerbian => "Croatian/Serbian",
            Cuneiform => "Cuneiform",
            Cypriot => "Cypriot",
            Cyrillic => "Cyrillic",
            Deseret => "Deseret",
            Devanagari => "Devanagari",
            Duployan => "Duployan",
            EarlyDynasticCuneiform => "Early Dynastic Cuneiform",
            EgyptianHieroglyphs => "Egyptian Hieroglyphs",
            Elbasan => "Elbasan",
            Ethiopic => "Ethiopic",
            Georgian => "Georgian",
            Glagolitic => "Glagolitic",
            Gothic => "Gothic",
            Grantha => "Grantha",
            Greek => "Greek",
            Gujarati => "Gujarati",
            Gurmukhi => "Gurmukhi",
            HalfwidthHangul => "Halfwidth Hangul",
            HalfwidthKatakana => "Halfwidth Katakana",
            HalfwidthLatin => "Halfwidth Latin",
            Hangul => "Hangul",
            Hanunoo => "Hanunoo",
            Hatran => "Hatran",
            Hebrew => "Hebrew",
            Hiragana => "Hiragana",
            ImperialAramaic => "Imperial Aramaic",
            InscriptionalPahlavi => "Inscriptional Pahlavi",
            InscriptionalParthian => "Inscriptional Parthian",
            IPA => "IPA",
            Javanese => "Javanese",
            Kaithi => "Kaithi",
            Kana => "Kana",
            Kanbun => "Kanbun",
            Kannada => "Kannada",
            Katakana => "Katakana",
            KayahLi => "Kayah Li",
            Kharoshthi => "Kharoshthi",
            Khmer => "Khmer",
            Khojki => "Khojki",
            Khudawadi => "Khudawadi",
            Lao => "Lao",
            Latin => "Latin",
            Lepcha => "Lepcha",
            Limbu => "Limbu",
            LinearA => "Linear A",
            LinearB => "Linear B",
            Lisu => "Lisu",
            Livonian => "Livonian",
            Lycian => "Lycian",
            Lydian => "Lydian",
            Mahajani => "Mahajani",
            Malayalam => "Malayalam",
            Mandaic => "Mandaic",
            Manichaean => "Manichaean",
            MeeteiMayek => "Meetei Mayek",
            MendeKikakui => "Mende Kikakui",
            MeroiticHieroglyphs => "Meroitic Hieroglyphs",
            Miao => "Miao",
            Modi => "Modi",
            Mongolian => "Mongolian",
            Mro => "Mro",
            Multani => "Multani",
            Myanmar => "Myanmar",
            Nabataean => "Nabataean",
            NewTaiLue => "New Tai Lue",
            NKo => "NKo",
            Ogham => "Ogham",
            OlChiki => "Ol Chiki",
            OldHungarian => "Old Hungarian",
            OldItalic => "Old Italic",
            OldPermic => "Old Permic",
            OldPersian => "Old Persian",
            OldSouthArabian => "Old South Arabian",
            OldTurkic => "Old Turkic",
            Omyanya => "Omyanya",
            OrdNorthArabian => "Ord North Arabian",
            Oriya => "Oriya",
            PahawhHmong => "Pahawh Hmong",
            Palmyrene => "Palmyrene",
            PauCinHau => "Pau Cin Hau",
            PhagsPa => "Phags'pa",
            Phoenician => "Phoenician",
            Phonetic => "Phonetic",
            Pinyin => "Pinyin",
            PsalterPahlavi => "Psalter Pahlavi",
            Rejang => "Rejang",
            Romanian => "Romanian",
            Runic => "Runic",
            Samaritan => "Samaritan",
            Saurashtra => "Saurashtra",
            Sharada => "Sharada",
            Shavian => "Shavian",
            Siddham => "Siddham",
            Sinhala => "Sinhala",
            Sinology => "Sinology",
            SoraSompeng => "Sora Sompeng",
            Sundanese => "Sundanese",
            SuttonSignWriting => "Sutton SignWriting",
            SylotiNagri => "Syloti Nagri",
            Syriac => "Syriac",
            Tagalog => "Tagalog",
            Tagbanwa => "Tagbanwa",
            TaiViet => "Tai Viet",
            TaiLe => "Tai Le",
            Takri => "Takri",
            Tamil => "Tamil",
            Telugu => "Telugu",
            Thaana => "Thaana",
            Thai => "Thai",
            Tibetan => "Tibetan",
            Tifinagh => "Tifinagh",
            Tirhuta => "Tirhuta",
            Ugaritic => "Ugaritic",
            UnifiedCanadianAboriginalSyllabics => "Unified Canadian Aboriginal Syllabics",
            Vai => "Vai",
            Vedic => "Vedic",
            WarangCiti => "Warang Citi",
            Yi => "Yi",
        }
    }
}

static SCRIPT_TABLE: &'static [(u32, u32, Script)] = &[
    (0x00041, 0x0005A, Latin),
    (0x00061, 0x0007A, Latin),
    (0x000C0, 0x000D6, Latin),
    (0x000D8, 0x000F6, Latin),
    (0x000F8, 0x000FF, Latin),
    (0x00100, 0x0017F, Latin),
    (0x00180, 0x001BF, Latin),
    (0x001C4, 0x001CC, CroatianSerbian),
    (0x001CD, 0x001DC, Pinyin),
    (0x00200, 0x00217, CroatianSerbian),
    (0x00218, 0x0021B, Romanian),
    (0x0022A, 0x00233, Livonian),
    (0x00234, 0x00236, Sinology),
    (0x00250, 0x002AF, IPA),
    (0x00370, 0x003E1, Greek),
    (0x003E2, 0x003EF, Coptic),
    (0x003F0, 0x003FF, Greek),
    (0x00400, 0x004FF, Cyrillic),
    (0x00500, 0x0052F, Cyrillic),
    (0x00530, 0x0058F, Armenian),
    (0x00590, 0x005FF, Hebrew),
    (0x00600, 0x006FF, Arabic),
    (0x00700, 0x0074F, Syriac),
    (0x00750, 0x0077F, Arabic),
    (0x00780, 0x007B1, Thaana),
    (0x007C0, 0x007FF, NKo),
    (0x00800, 0x0083F, Samaritan),
    (0x00840, 0x0085F, Mandaic),
    (0x008A0, 0x008FF, Arabic),
    (0x00900, 0x0097F, Devanagari),
    (0x00980, 0x009FF, Bengali),
    (0x00A00, 0x00A7F, Gurmukhi),
    (0x00A80, 0x00AFF, Gujarati),
    (0x00B00, 0x00B7F, Oriya),
    (0x00B80, 0x00BFF, Tamil),
    (0x00C00, 0x00C7F, Telugu),
    (0x00C80, 0x00CFF, Kannada),
    (0x00D00, 0x00D7F, Malayalam),
    (0x00D80, 0x00DFF, Sinhala),
    (0x00E00, 0x00E7F, Thai),
    (0x00E80, 0x00EFF, Lao),
    (0x00F00, 0x00FFF, Tibetan),
    (0x01000, 0x0109F, Myanmar),
    (0x010A0, 0x010FF, Georgian),
    (0x01100, 0x011FF, Hangul),
    (0x01200, 0x0137F, Ethiopic),
    (0x01300, 0x1032F, OldItalic),
    (0x01380, 0x0139F, Ethiopic),
    (0x013A0, 0x013FF, Cherokee),
    (0x01400, 0x0167F, UnifiedCanadianAboriginalSyllabics),
    (0x01680, 0x0169F, Ogham),  // :)
    (0x016A0, 0x016FF, Runic),
    (0x01700, 0x0171F, Tagalog),
    (0x01720, 0x0173F, Hanunoo),
    (0x01740, 0x0175F, Buhid),
    (0x01760, 0x0177F, Tagbanwa),
    (0x01780, 0x017FF, Khmer),
    (0x01800, 0x018AF, Mongolian),
    (0x018B0, 0x018FF, UnifiedCanadianAboriginalSyllabics),
    (0x01900, 0x0194F, Limbu),
    (0x01950, 0x0197F, TaiLe),
    (0x01980, 0x019DF, NewTaiLue),
    (0x019E0, 0x019FF, Khmer),
    (0x01A00, 0x01A1F, Buginese),
    (0x01B00, 0x01B7F, Balinese),
    (0x01B80, 0x01BBF, Sundanese),
    (0x01BC0, 0x01BFF, Batak),
    (0x01C00, 0x01C4F, Lepcha),
    (0x01C50, 0x01C7F, OlChiki),
    (0x01CC0, 0x01CCF, Sundanese),
    (0x01CD0, 0x01CFF, Vedic),
    (0x01D00, 0x01D7F, Phonetic),
    (0x01D80, 0x01DBF, Phonetic),
    (0x01E00, 0x01EFF, Latin),
    (0x01F00, 0x01FFF, Greek),
    (0x02800, 0x028FF, Braille),
    (0x02C00, 0x02C5F, Glagolitic),
    (0x02C60, 0x02C7F, Latin),
    (0x02C80, 0x02CFF, Coptic),
    (0x02D00, 0x02D2F, Georgian),
    (0x02D30, 0x02D7F, Tifinagh),
    (0x02D80, 0x02DDF, Ethiopic),
    (0x02DE0, 0x02DFF, Cyrillic),
    (0x02E80, 0x02EFF, CJK),
    (0x02F00, 0x02FDF, CJK),
    (0x03000, 0x0303F, CJK),
    (0x03040, 0x0309F, Hiragana),
    (0x030A0, 0x030FF, Katakana),
    (0x03100, 0x0312F, Bopomofo),
    (0x03130, 0x0318F, Hangul),
    (0x03190, 0x0319F, Kanbun),
    (0x031A0, 0x031BF, Bopomofo),
    (0x031C0, 0x031EF, CJK),
    (0x031F0, 0x031FF, Katakana),
    (0x03400, 0x04DB5, CJK),
    (0x04E00, 0x09FD5, CJK),
    (0x0A000, 0x0A48F, Yi),
    (0x0A490, 0x0A4CF, Yi),
    (0x0A4D0, 0x0A4FF, Lisu),
    (0x0A500, 0x0A63F, Vai),
    (0x0A640, 0x0A69F, Cyrillic),
    (0x0A6A0, 0x0A6FF, Bamum),
    (0x0A720, 0x0A7FF, Latin),
    (0x0A800, 0x0A82F, SylotiNagri),
    (0x0A840, 0x0A87F, PhagsPa),
    (0x0A880, 0x0A8DF, Saurashtra),
    (0x0A8E0, 0x0A8FF, Devanagari),
    (0x0A900, 0x0A92F, KayahLi),
    (0x0A930, 0x0A95F, Rejang),
    (0x0A960, 0x0A97F, Hangul),
    (0x0A980, 0x0A9DF, Javanese),
    (0x0A9E0, 0x0A9FF, Myanmar),
    (0x0AA60, 0x0AA7F, Myanmar),
    (0x0AA80, 0x0AADF, TaiViet),
    (0x0AAE0, 0x0AAFF, MeeteiMayek),
    (0x0AB00, 0x0AB2F, Ethiopic),
    (0x0AB30, 0x0AB6F, Latin),
    (0x0AB70, 0x0ABBF, Cherokee),
    (0x0ABC0, 0x0ABFF, MeeteiMayek),
    (0x0AC00, 0x0D7AF, Hangul),
    (0x0D7B0, 0x0D7FF, Hangul),
    (0x0F900, 0x0FAFF, CJK),
    (0x0FB00, 0x0FB06, Latin),
    (0x0FB13, 0x0FB17, Armenian),
    (0x0FB1D, 0x0FB4F, Hebrew),
    (0x0FB50, 0x0FDFF, Arabic),
    (0x0FF21, 0x0FF51, HalfwidthLatin),
    (0x0FF65, 0x0FF9F, HalfwidthKatakana),
    (0x0FFA0, 0x0FFDC, HalfwidthHangul),
    (0x10000, 0x1007F, LinearB),
    (0x10080, 0x100FF, LinearB),
    (0x10280, 0x1029F, Lycian),
    (0x102A0, 0x102DF, Carian),
    (0x102E0, 0x102FF, Coptic),
    (0x10330, 0x1034F, Gothic),
    (0x10350, 0x1037F, OldPermic),
    (0x10380, 0x1039F, Ugaritic),
    (0x103A0, 0x103DF, OldPersian),
    (0x10400, 0x1044F, Deseret),
    (0x10450, 0x1047F, Shavian),
    (0x10480, 0x104AF, Omyanya),
    (0x10500, 0x1052F, Elbasan),
    (0x10530, 0x1056F, CaucasianAlbanian),
    (0x10600, 0x1077F, LinearA),
    (0x10800, 0x1083F, Cypriot),
    (0x10840, 0x1085F, ImperialAramaic),
    (0x10860, 0x1087F, Palmyrene),
    (0x10880, 0x108AF, Nabataean),
    (0x108A0, 0x10A9F, OrdNorthArabian),
    (0x108E0, 0x108FF, Hatran),
    (0x10900, 0x1091F, Phoenician),
    (0x10920, 0x1093F, Lydian),
    (0x10980, 0x1099F, MeroiticHieroglyphs),
    (0x109A0, 0x109FF, MeroiticHieroglyphs),
    (0x10A00, 0x10A5F, Kharoshthi),
    (0x10A60, 0x10A7F, OldSouthArabian),
    (0x10AC0, 0x10AFF, Manichaean),
    (0x10B00, 0x10B3F, Avestan),
    (0x10B40, 0x10B5F, InscriptionalParthian),
    (0x10B60, 0x10B7F, InscriptionalPahlavi),
    (0x10B80, 0x10BAF, PsalterPahlavi),
    (0x10C00, 0x10C4F, OldTurkic),
    (0x10C80, 0x10CFF, OldHungarian),
    (0x11000, 0x1107F, Brahmi),
    (0x11080, 0x110CF, Kaithi),
    (0x110D0, 0x110FF, SoraSompeng),
    (0x11100, 0x1114F, Chakma),
    (0x11150, 0x1117F, Mahajani),
    (0x11180, 0x111DF, Sharada),
    (0x111E0, 0x111FF, Sinhala),
    (0x11200, 0x1124F, Khojki),
    (0x11280, 0x112AF, Multani),
    (0x112B0, 0x112FF, Khudawadi),
    (0x11300, 0x1137F, Grantha),
    (0x11480, 0x114DF, Tirhuta),
    (0x11580, 0x115FF, Siddham),
    (0x11600, 0x1165F, Modi),
    (0x11680, 0x116CF, Takri),
    (0x11700, 0x1173F, Ahom),
    (0x118A0, 0x118FF, WarangCiti),
    (0x11AC0, 0x11AFF, PauCinHau),
    (0x12000, 0x1247F, Cuneiform),
    (0x12480, 0x1254F, EarlyDynasticCuneiform),
    (0x13000, 0x1342F, EgyptianHieroglyphs),
    (0x14400, 0x1467F, AnatolianHieroglyphs),
    (0x16800, 0x16A3F, Bamum),
    (0x16A40, 0x16A6F, Mro),
    (0x16AD0, 0x16AFF, BassaVah),
    (0x16B00, 0x16B8F, PahawhHmong),
    (0x16F00, 0x16F9F, Miao),
    (0x1B000, 0x1B0FF, Kana),
    (0x1BC00, 0x1BC9F, Duployan),
    (0x1D800, 0x1DAAF, SuttonSignWriting),
    (0x1E800, 0x1E8DF, MendeKikakui),
    (0x1F200, 0x1F200, Hiragana),
    (0x1F201, 0x1F202, Katakana),
    (0x1F210, 0x1F2FF, CJK),
    (0x20000, 0x2A6D6, CJK),
    (0x2A700, 0x2B734, CJK),
    (0x2B740, 0x2B81D, CJK),
    (0x2B820, 0x2CEA1, CJK),
    (0x2F800, 0x2FA1F, CJK),
];

#[cfg(test)]
mod test {
    use super::Script;
    use super::Script::*;

    macro_rules! test {
        ($name: ident: $input: expr => $result: expr) => {
            #[test]
            fn $name() {
                assert_eq!(Script::lookup($input), $result)
            }
        };
    }

    test!(latin: 'L' => Some(Latin));
    test!(greek: 'λ' => Some(Greek));
}
